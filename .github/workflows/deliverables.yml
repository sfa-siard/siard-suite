# understands how to build platform specific binaries that ship with the necessary java runtime
name: Create standalone deliverables for SIARD (installers and distributions with runtimes)

on:
  push:
    tags:
      - v*.**

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        java: [ '18' ]
      fail-fast: false
    name: ${{ matrix.os }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      - name: Set TAG-Env
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: echo "NAME_TAG=SIARD-suite-${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Set TAG-Env Windows
        if: runner.os == 'Windows'
        run: echo "NAME_TAG=SIARD-suite-${{ github.ref_name }}" >> $env:GITHUB_ENV
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'zulu'
          java-package: "jdk+fx"
          cache: "gradle"
      - name: Echo JAVA_HOME
        run: echo $JAVA_HOME
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Execute build imageZip jpackage
        run: ./gradlew build --no-daemon
      - name: Upload DMG as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.NAME_TAG }}-jdk-${{ matrix.java }}-${{ runner.os }}-dmg
          path: build/jpackage/*.dmg
          if-no-files-found: ignore
      - name: Upload EXE as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.NAME_TAG }}-jdk-${{ matrix.java }}-win-exe
          path: build/jpackage/*.exe
          if-no-files-found: ignore
      - name: Upload MSI as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.NAME_TAG }}-jdk-${{ matrix.java }}-win-msi
          path: build/jpackage/*.msi
          if-no-files-found: ignore
      - name: Upload DEB as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.NAME_TAG }}-jdk-${{ matrix.java }}-${{ runner.os }}-deb
          path: build/jpackage/*.deb
          if-no-files-found: ignore
      - name: Upload RPM as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.NAME_TAG }}-jdk-${{ matrix.java }}-${{ runner.os }}-rpm
          path: build/jpackage/*.rpm
          if-no-files-found: ignore
      - name: Upload application image zip
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.NAME_TAG }}-${{ runner.os }}
          path: build/image-zip/*.zip
